<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.13">
  <POU Name="AdvancedFaultDetection" Id="{2b5911ac-5807-4d37-b02a-30e71dc7b111}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK AdvancedFaultDetection
VAR_INPUT
    Sensor1 : BOOL;          (* Sensor 1 input *)
    Sensor2 : BOOL;          (* Sensor 2 input *)
    Sensor3 : BOOL;          (* Sensor 3 input *)
    PressureSwitch : BOOL;   (* Pressure switch input *)
    TemperatureSensor : BOOL;(* Temperature sensor input *)
END_VAR
VAR
    
    FaultCondition : BOOL;   (* Flag to indicate fault detection *)
    FaultLogged : BOOL;      (* Flag to ensure fault is logged once *)
    FaultMessage : STRING;   (* Variable to store the fault message *)
END_VAR
VAR_OUTPUT
    FaultSignal : BOOL;      (* Output to indicate fault condition *)
END_VAR
VAR_INPUT
    ResetFault : BOOL;       (* Input to reset the fault condition *)
    FaultResetTimer : TON;   (* Timer to reset fault after a set time *)
END_VAR
VAR
    FaultLogHistory : ARRAY[1..10] OF STRING; (* Store history of fault logs *)
    FaultLogIndex : INT := 1;  (* Index for logging faults in the history *)
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[
(* Fault Detection Routine *)
IF NOT Sensor1 THEN
    FaultCondition := TRUE;
    FaultMessage := 'Fault: Sensor 1 is malfunctioning.';
ELSIF NOT Sensor2 THEN
    FaultCondition := TRUE;
    FaultMessage := 'Fault: Sensor 2 is malfunctioning.';
ELSIF NOT Sensor3 THEN
    FaultCondition := TRUE;
    FaultMessage := 'Fault: Sensor 3 is malfunctioning.';
ELSIF NOT PressureSwitch THEN
    FaultCondition := TRUE;
    FaultMessage := 'Fault: Pressure Switch failure.';
ELSIF NOT TemperatureSensor THEN
    FaultCondition := TRUE;
    FaultMessage := 'Fault: Temperature sensor out of range.';
ELSE
    FaultCondition := FALSE;
END_IF

(* Logging Fault Once and Storing in Fault Log History *)
IF FaultCondition AND NOT FaultLogged THEN
    FaultLogged := TRUE;  (* Log the fault once *)
    FaultSignal := TRUE;  (* Activate FaultSignal *)

    (* Log fault with timestamp and message *)
    FaultLogHistory[FaultLogIndex] := CONCAT('Timestamp: ', DATE_AND_TIME_TO_STRING(TIME_NOW), ' - ', FaultMessage);
    
    (* Increment the index for the next log entry (circular logging after 10 logs) *)
    IF FaultLogIndex < 10 THEN
        FaultLogIndex := FaultLogIndex + 1;
    ELSE
        FaultLogIndex := 1;  (* Reset index after reaching 10 logs *)
    END_IF
    
    (* You can add here any additional logging system, e.g., to a database or external file *)
END_IF

(* Timer-Based Fault Reset Logic *)
FaultResetTimer(IN := FaultCondition, PT := T#5m);  (* Timer to reset fault after 5 minutes *)

IF FaultResetTimer.Q THEN
    FaultCondition := FALSE;       (* Clear fault condition after reset timer *)
    FaultLogged := FALSE;          (* Reset fault logged flag *)
    FaultMessage := '';            (* Clear fault message *)
    FaultSignal := FALSE;          (* Deactivate FaultSignal *)
    FaultResetTimer(IN := FALSE);  (* Reset timer *)
END_IF

(* Fault Reset Logic by Manual Reset Input *)
IF ResetFault THEN
    FaultCondition := FALSE;       (* Clear fault condition manually *)
    FaultLogged := FALSE;          (* Reset fault logged flag *)
    FaultMessage := '';            (* Clear fault message *)
    FaultSignal := FALSE;          (* Deactivate FaultSignal *)
    FaultResetTimer(IN := FALSE);  (* Stop and reset timer *)
END_IF

(* Advanced Logging System: You can output the FaultLogHistory array to an HMI or external system *)
(* Example: Displaying the last 5 fault logs to an HMI *)

FOR i := 1 TO 5 DO
    (* Display FaultLogHistory[i] on HMI or send to external logging system *)
    (* HMI_Display(FaultLogHistory[i]); *)
END_FOR

(* Additional Diagnostic Outputs *)
IF FaultCondition THEN
    (* Fault detected, display the message on HMI *)
    (* HMI_Display(FaultMessage); *)
ELSE
    FaultMessage := 'No faults detected.';
END_IF
]]></ST>
    </Implementation>
    <LineIds Name="AdvancedFaultDetection">
      <LineId Id="25" Count="0" />
      <LineId Id="27" Count="72" />
      <LineId Id="9" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>